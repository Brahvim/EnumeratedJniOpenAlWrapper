/* Define int64 and uint64 types */
/* Fallback if nothing above works */
public final static int AL_LOKI_IMA_ADPCM_format = 1;

public final static int AL_FORMAT_IMA_ADPCM_MONO16_EXT = 0x10000;

public final static int AL_FORMAT_IMA_ADPCM_STEREO16_EXT = 0x10001;

public final static int AL_LOKI_WAVE_format = 1;

public final static int AL_FORMAT_WAVE_EXT = 0x10002;

public final static int AL_EXT_vorbis = 1;

public final static int AL_FORMAT_VORBIS_EXT = 0x10003;

public final static int AL_LOKI_quadriphonic = 1;

public final static int AL_FORMAT_QUAD8_LOKI = 0x10004;

public final static int AL_FORMAT_QUAD16_LOKI = 0x10005;

public final static int AL_EXT_float32 = 1;

public final static int AL_FORMAT_MONO_FLOAT32 = 0x10010;

public final static int AL_FORMAT_STEREO_FLOAT32 = 0x10011;

public final static int AL_EXT_double = 1;

public final static int AL_FORMAT_MONO_DOUBLE_EXT = 0x10012;

public final static int AL_FORMAT_STEREO_DOUBLE_EXT = 0x10013;

public final static int AL_EXT_MULAW = 1;

public final static int AL_FORMAT_MONO_MULAW_EXT = 0x10014;

public final static int AL_FORMAT_STEREO_MULAW_EXT = 0x10015;

public final static int AL_EXT_ALAW = 1;

public final static int AL_FORMAT_MONO_ALAW_EXT = 0x10016;

public final static int AL_FORMAT_STEREO_ALAW_EXT = 0x10017;

public final static int ALC_LOKI_audio_channel = 1;

public final static int ALC_CHAN_MAIN_LOKI = 0x500001;

public final static int ALC_CHAN_PCM_LOKI = 0x500002;

public final static int ALC_CHAN_CD_LOKI = 0x500003;

public final static int AL_EXT_MCFORMATS = 1;

/* Provides support for surround sound buffer formats with 8, 16, and 32-bit
 * samples.
 *
 * QUAD8: Unsigned 8-bit, Quadraphonic (Front Left, Front Right, Rear Left,
 *        Rear Right).
 * QUAD16: Signed 16-bit, Quadraphonic.
 * QUAD32: 32-bit float, Quadraphonic.
 * REAR8: Unsigned 8-bit, Rear Stereo (Rear Left, Rear Right).
 * REAR16: Signed 16-bit, Rear Stereo.
 * REAR32: 32-bit float, Rear Stereo.
 * 51CHN8: Unsigned 8-bit, 5.1 Surround (Front Left, Front Right, Front Center,
 *         LFE, Side Left, Side Right). Note that some audio systems may label
 *         5.1's Side channels as Rear or Surround; they are equivalent for the
 *         purposes of this extension.
 * 51CHN16: Signed 16-bit, 5.1 Surround.
 * 51CHN32: 32-bit float, 5.1 Surround.
 * 61CHN8: Unsigned 8-bit, 6.1 Surround (Front Left, Front Right, Front Center,
 *         LFE, Rear Center, Side Left, Side Right).
 * 61CHN16: Signed 16-bit, 6.1 Surround.
 * 61CHN32: 32-bit float, 6.1 Surround.
 * 71CHN8: Unsigned 8-bit, 7.1 Surround (Front Left, Front Right, Front Center,
 *         LFE, Rear Left, Rear Right, Side Left, Side Right).
 * 71CHN16: Signed 16-bit, 7.1 Surround.
 * 71CHN32: 32-bit float, 7.1 Surround.
 */
public final static int AL_FORMAT_QUAD8 = 0x1204;

public final static int AL_FORMAT_QUAD16 = 0x1205;

public final static int AL_FORMAT_QUAD32 = 0x1206;

public final static int AL_FORMAT_REAR8 = 0x1207;

public final static int AL_FORMAT_REAR16 = 0x1208;

public final static int AL_FORMAT_REAR32 = 0x1209;

public final static int AL_FORMAT_51CHN8 = 0x120A;

public final static int AL_FORMAT_51CHN16 = 0x120B;

public final static int AL_FORMAT_51CHN32 = 0x120C;

public final static int AL_FORMAT_61CHN8 = 0x120D;

public final static int AL_FORMAT_61CHN16 = 0x120E;

public final static int AL_FORMAT_61CHN32 = 0x120F;

public final static int AL_FORMAT_71CHN8 = 0x1210;

public final static int AL_FORMAT_71CHN16 = 0x1211;

public final static int AL_FORMAT_71CHN32 = 0x1212;

public final static int AL_EXT_MULAW_MCFORMATS = 1;

public final static int AL_FORMAT_MONO_MULAW = 0x10014;

public final static int AL_FORMAT_STEREO_MULAW = 0x10015;

public final static int AL_FORMAT_QUAD_MULAW = 0x10021;

public final static int AL_FORMAT_REAR_MULAW = 0x10022;

public final static int AL_FORMAT_51CHN_MULAW = 0x10023;

public final static int AL_FORMAT_61CHN_MULAW = 0x10024;

public final static int AL_FORMAT_71CHN_MULAW = 0x10025;

public final static int AL_EXT_IMA4 = 1;

public final static int AL_FORMAT_MONO_IMA4 = 0x1300;

public final static int AL_FORMAT_STEREO_IMA4 = 0x1301;

public final static int AL_EXT_STATIC_BUFFER = 1;

public final static int ALC_EXT_EFX = 1;

public final static int ALC_EXT_disconnect = 1;

public final static int ALC_CONNECTED = 0x313;

public final static int ALC_EXT_thread_local_context = 1;

public final static int AL_EXT_source_distance_model = 1;

public final static int AL_SOURCE_DISTANCE_MODEL = 0x200;

public final static int AL_SOFT_buffer_sub_data = 1;

public final static int AL_BYTE_RW_OFFSETS_SOFT = 0x1031;

public final static int AL_SAMPLE_RW_OFFSETS_SOFT = 0x1032;

public final static int AL_SOFT_loop_points = 1;

public final static int AL_LOOP_POINTS_SOFT = 0x2015;

public final static int AL_EXT_FOLDBACK = 1;

public final static int AL_EXT_FOLDBACK_NAME = "AL_EXT_FOLDBACK";

public final static int AL_FOLDBACK_EVENT_BLOCK = 0x4112;

public final static int AL_FOLDBACK_EVENT_START = 0x4111;

public final static int AL_FOLDBACK_EVENT_STOP = 0x4113;

public final static int AL_FOLDBACK_MODE_MONO = 0x4101;

public final static int AL_FOLDBACK_MODE_STEREO = 0x4102;

public final static int ALC_EXT_DEDICATED = 1;

public final static int AL_DEDICATED_GAIN = 0x0001;

public final static int AL_EFFECT_DEDICATED_DIALOGUE = 0x9001;

public final static int AL_EFFECT_DEDICATED_LOW_FREQUENCY_EFFECT = 0x9000;

public final static int AL_SOFT_buffer_samples = 1;

/* Channel configurations */
public final static int AL_MONO_SOFT = 0x1500;

public final static int AL_STEREO_SOFT = 0x1501;

public final static int AL_REAR_SOFT = 0x1502;

public final static int AL_QUAD_SOFT = 0x1503;

public final static int AL_5POINT1_SOFT = 0x1504;

public final static int AL_6POINT1_SOFT = 0x1505;

public final static int AL_7POINT1_SOFT = 0x1506;

/* Sample types */
public final static int AL_BYTE_SOFT = 0x1400;

public final static int AL_UNSIGNED_BYTE_SOFT = 0x1401;

public final static int AL_SHORT_SOFT = 0x1402;

public final static int AL_UNSIGNED_SHORT_SOFT = 0x1403;

public final static int AL_INT_SOFT = 0x1404;

public final static int AL_UNSIGNED_INT_SOFT = 0x1405;

public final static int AL_FLOAT_SOFT = 0x1406;

public final static int AL_DOUBLE_SOFT = 0x1407;

public final static int AL_BYTE3_SOFT = 0x1408;

public final static int AL_UNSIGNED_BYTE3_SOFT = 0x1409;

/* Storage formats */
public final static int AL_MONO8_SOFT = 0x1100;

public final static int AL_MONO16_SOFT = 0x1101;

public final static int AL_MONO32F_SOFT = 0x10010;

public final static int AL_STEREO8_SOFT = 0x1102;

public final static int AL_STEREO16_SOFT = 0x1103;

public final static int AL_STEREO32F_SOFT = 0x10011;

public final static int AL_QUAD8_SOFT = 0x1204;

public final static int AL_QUAD16_SOFT = 0x1205;

public final static int AL_QUAD32F_SOFT = 0x1206;

public final static int AL_REAR8_SOFT = 0x1207;

public final static int AL_REAR16_SOFT = 0x1208;

public final static int AL_REAR32F_SOFT = 0x1209;

public final static int AL_5POINT1_8_SOFT = 0x120A;

public final static int AL_5POINT1_16_SOFT = 0x120B;

public final static int AL_5POINT1_32F_SOFT = 0x120C;

public final static int AL_6POINT1_8_SOFT = 0x120D;

public final static int AL_6POINT1_16_SOFT = 0x120E;

public final static int AL_6POINT1_32F_SOFT = 0x120F;

public final static int AL_7POINT1_8_SOFT = 0x1210;

public final static int AL_7POINT1_16_SOFT = 0x1211;

public final static int AL_7POINT1_32F_SOFT = 0x1212;

/* Buffer attributes */
public final static int AL_INTERNAL_FORMAT_SOFT = 0x2008;

public final static int AL_BYTE_LENGTH_SOFT = 0x2009;

public final static int AL_SAMPLE_LENGTH_SOFT = 0x200A;

public final static int AL_SEC_LENGTH_SOFT = 0x200B;

public final static int AL_SOFT_direct_channels = 1;

public final static int AL_DIRECT_CHANNELS_SOFT = 0x1033;

public final static int ALC_SOFT_loopback = 1;

public final static int ALC_FORMAT_CHANNELS_SOFT = 0x1990;

public final static int ALC_FORMAT_TYPE_SOFT = 0x1991;

/* Sample types */
public final static int ALC_BYTE_SOFT = 0x1400;

public final static int ALC_UNSIGNED_BYTE_SOFT = 0x1401;

public final static int ALC_SHORT_SOFT = 0x1402;

public final static int ALC_UNSIGNED_SHORT_SOFT = 0x1403;

public final static int ALC_INT_SOFT = 0x1404;

public final static int ALC_UNSIGNED_INT_SOFT = 0x1405;

public final static int ALC_FLOAT_SOFT = 0x1406;

/* Channel configurations */
public final static int ALC_MONO_SOFT = 0x1500;

public final static int ALC_STEREO_SOFT = 0x1501;

public final static int ALC_QUAD_SOFT = 0x1503;

public final static int ALC_5POINT1_SOFT = 0x1504;

public final static int ALC_6POINT1_SOFT = 0x1505;

public final static int ALC_7POINT1_SOFT = 0x1506;

public final static int AL_EXT_STEREO_ANGLES = 1;

public final static int AL_STEREO_ANGLES = 0x1030;

public final static int AL_EXT_SOURCE_RADIUS = 1;

public final static int AL_SOURCE_RADIUS = 0x1031;

public final static int AL_SOFT_source_latency = 1;

public final static int AL_SAMPLE_OFFSET_LATENCY_SOFT = 0x1200;

public final static int AL_SEC_OFFSET_LATENCY_SOFT = 0x1201;

public final static int ALC_EXT_DEFAULT_FILTER_ORDER = 1;

public final static int ALC_DEFAULT_FILTER_ORDER = 0x1100;

public final static int AL_SOFT_deferred_updates = 1;

public final static int AL_DEFERRED_UPDATES_SOFT = 0xC002;

public final static int AL_SOFT_block_alignment = 1;

public final static int AL_UNPACK_BLOCK_ALIGNMENT_SOFT = 0x200C;

public final static int AL_PACK_BLOCK_ALIGNMENT_SOFT = 0x200D;

public final static int AL_SOFT_MSADPCM = 1;

public final static int AL_FORMAT_MONO_MSADPCM_SOFT = 0x1302;

public final static int AL_FORMAT_STEREO_MSADPCM_SOFT = 0x1303;

public final static int AL_SOFT_source_length = 1;

/*#define AL_BYTE_LENGTH_SOFT                      0x2009*/
public final static int AL_BYTE_LENGTH_SOFT = 0x2009*/;

public final static int AL_SAMPLE_LENGTH_SOFT = 0x200A*/;

public final static int AL_SEC_LENGTH_SOFT = 0x200B*/;

public final static int ALC_SOFT_pause_device = 1;

public final static int AL_EXT_BFORMAT = 1;

/* Provides support for B-Format ambisonic buffers (first-order, FuMa scaling
 * and layout).
 *
 * BFORMAT2D_8: Unsigned 8-bit, 3-channel non-periphonic (WXY).
 * BFORMAT2D_16: Signed 16-bit, 3-channel non-periphonic (WXY).
 * BFORMAT2D_FLOAT32: 32-bit float, 3-channel non-periphonic (WXY).
 * BFORMAT3D_8: Unsigned 8-bit, 4-channel periphonic (WXYZ).
 * BFORMAT3D_16: Signed 16-bit, 4-channel periphonic (WXYZ).
 * BFORMAT3D_FLOAT32: 32-bit float, 4-channel periphonic (WXYZ).
 */
public final static int AL_FORMAT_BFORMAT2D_8 = 0x20021;

public final static int AL_FORMAT_BFORMAT2D_16 = 0x20022;

public final static int AL_FORMAT_BFORMAT2D_FLOAT32 = 0x20023;

public final static int AL_FORMAT_BFORMAT3D_8 = 0x20031;

public final static int AL_FORMAT_BFORMAT3D_16 = 0x20032;

public final static int AL_FORMAT_BFORMAT3D_FLOAT32 = 0x20033;

public final static int AL_EXT_MULAW_BFORMAT = 1;

public final static int AL_FORMAT_BFORMAT2D_MULAW = 0x10031;

public final static int AL_FORMAT_BFORMAT3D_MULAW = 0x10032;

public final static int ALC_SOFT_HRTF = 1;

public final static int ALC_HRTF_SOFT = 0x1992;

public final static int ALC_DONT_CARE_SOFT = 0x0002;

public final static int ALC_HRTF_STATUS_SOFT = 0x1993;

public final static int ALC_HRTF_DISABLED_SOFT = 0x0000;

public final static int ALC_HRTF_ENABLED_SOFT = 0x0001;

public final static int ALC_HRTF_DENIED_SOFT = 0x0002;

public final static int ALC_HRTF_REQUIRED_SOFT = 0x0003;

public final static int ALC_HRTF_HEADPHONES_DETECTED_SOFT = 0x0004;

public final static int ALC_HRTF_UNSUPPORTED_FORMAT_SOFT = 0x0005;

public final static int ALC_NUM_HRTF_SPECIFIERS_SOFT = 0x1994;

public final static int ALC_HRTF_SPECIFIER_SOFT = 0x1995;

public final static int ALC_HRTF_ID_SOFT = 0x1996;

public final static int AL_SOFT_gain_clamp_ex = 1;

public final static int AL_GAIN_LIMIT_SOFT = 0x200E;

public final static int AL_NUM_RESAMPLERS_SOFT = 0x1210;

public final static int AL_DEFAULT_RESAMPLER_SOFT = 0x1211;

public final static int AL_SOURCE_RESAMPLER_SOFT = 0x1212;

public final static int AL_RESAMPLER_NAME_SOFT = 0x1213;

public final static int AL_SOURCE_SPATIALIZE_SOFT = 0x1214;

public final static int AL_AUTO_SOFT = 0x0002;

public final static int ALC_OUTPUT_LIMITER_SOFT = 0x199A;

public final static int ALC_SOFT_device_clock = 1;

public final static int ALC_DEVICE_CLOCK_SOFT = 0x1600;

public final static int ALC_DEVICE_LATENCY_SOFT = 0x1601;

public final static int ALC_DEVICE_CLOCK_LATENCY_SOFT = 0x1602;

public final static int AL_SAMPLE_OFFSET_CLOCK_SOFT = 0x1202;

public final static int AL_SEC_OFFSET_CLOCK_SOFT = 0x1203;

public final static int AL_SOFT_direct_channels_remix = 1;

public final static int AL_DROP_UNMATCHED_SOFT = 0x0001;

public final static int AL_REMIX_UNMATCHED_SOFT = 0x0002;

public final static int AL_SOFT_bformat_ex = 1;

public final static int AL_AMBISONIC_LAYOUT_SOFT = 0x1997;

public final static int AL_AMBISONIC_SCALING_SOFT = 0x1998;

/* Ambisonic layouts */
public final static int AL_FUMA_SOFT = 0x0000;

public final static int AL_ACN_SOFT = 0x0001;

/* Ambisonic scalings (normalization) */
public final static int AL_SN3D_SOFT = 0x0001;

public final static int AL_N3D_SOFT = 0x0002;

public final static int ALC_SOFT_loopback_bformat = 1;

public final static int ALC_AMBISONIC_LAYOUT_SOFT = 0x1997;

public final static int ALC_AMBISONIC_SCALING_SOFT = 0x1998;

public final static int ALC_AMBISONIC_ORDER_SOFT = 0x1999;

public final static int ALC_MAX_AMBISONIC_ORDER_SOFT = 0x199B;

public final static int ALC_BFORMAT3D_SOFT = 0x1507;

/* Ambisonic layouts */
public final static int ALC_FUMA_SOFT = 0x0000;

public final static int ALC_ACN_SOFT = 0x0001;

/* Ambisonic scalings (normalization) */
public final static int ALC_SN3D_SOFT = 0x0001;

public final static int ALC_N3D_SOFT = 0x0002;

public final static int AL_EFFECTSLOT_TARGET_SOFT = 0x199C;

public final static int AL_SOFT_events = 1;

public final static int AL_EVENT_CALLBACK_FUNCTION_SOFT = 0x19A2;

public final static int AL_EVENT_CALLBACK_USER_PARAM_SOFT = 0x19A3;

public final static int AL_EVENT_TYPE_BUFFER_COMPLETED_SOFT = 0x19A4;

public final static int AL_EVENT_TYPE_SOURCE_STATE_CHANGED_SOFT = 0x19A5;

public final static int AL_EVENT_TYPE_DISCONNECTED_SOFT = 0x19A6;

public final static int AL_BUFFER_CALLBACK_FUNCTION_SOFT = 0x19A0;

public final static int AL_BUFFER_CALLBACK_USER_PARAM_SOFT = 0x19A1;

public final static int AL_FORMAT_UHJ2CHN8_SOFT = 0x19A2;

public final static int AL_FORMAT_UHJ2CHN16_SOFT = 0x19A3;

public final static int AL_FORMAT_UHJ2CHN_FLOAT32_SOFT = 0x19A4;

public final static int AL_FORMAT_UHJ3CHN8_SOFT = 0x19A5;

public final static int AL_FORMAT_UHJ3CHN16_SOFT = 0x19A6;

public final static int AL_FORMAT_UHJ3CHN_FLOAT32_SOFT = 0x19A7;

public final static int AL_FORMAT_UHJ4CHN8_SOFT = 0x19A8;

public final static int AL_FORMAT_UHJ4CHN16_SOFT = 0x19A9;

public final static int AL_FORMAT_UHJ4CHN_FLOAT32_SOFT = 0x19AA;

public final static int AL_STEREO_MODE_SOFT = 0x19B0;

public final static int AL_NORMAL_SOFT = 0x0000;

public final static int AL_SUPER_STEREO_SOFT = 0x0001;

public final static int AL_SUPER_STEREO_WIDTH_SOFT = 0x19B1;

public final static int ALC_OUTPUT_MODE_SOFT = 0x19AC;

public final static int ALC_ANY_SOFT = 0x19AD;

/*#define ALC_MONO_SOFT                            0x1500*/
public final static int ALC_MONO_SOFT = 0x1500*/;

public final static int ALC_STEREO_SOFT = 0x1501*/;

public final static int ALC_STEREO_BASIC_SOFT = 0x19AE;

public final static int ALC_STEREO_UHJ_SOFT = 0x19AF;

public final static int ALC_STEREO_HRTF_SOFT = 0x19B2;

/*#define ALC_QUAD_SOFT                            0x1503*/
public final static int ALC_QUAD_SOFT = 0x1503*/;

public final static int ALC_SURROUND_5_1_SOFT = 0x1504;

public final static int ALC_SURROUND_6_1_SOFT = 0x1505;

public final static int ALC_SURROUND_7_1_SOFT = 0x1506;

